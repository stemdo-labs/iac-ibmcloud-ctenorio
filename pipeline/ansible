pipeline {
    agent {
        kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'jnlp'
        }
    }
    environment {
        SSH_PRIVATE_KEY = credentials('SSH_PRIVATE_KEY')
        DB_NAME = credentials('DB_NAME')
        DB_USER = credentials('DB_USER')
        PGPASSWORD = credentials('PGPASSWORD')
      
    }
    stages {
    
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Instalar Ansible ') {
            steps {
                sh '''
                    apt update
                    apt install -y ansible sshpass 
                '''
            }
        }
    
        stage('Configurar SSH key') {
            steps {
                sh '''
                    mkdir -p ~/.ssh
                    cp "${SSH_PRIVATE_KEY}" ~/.ssh/id_rsa
                    chmod 600 ~/.ssh/id_rsa
                    ssh-keyscan -H 10.251.2.6 >> ~/.ssh/known_hosts
                '''
            }
        }
        
        stage('Crear Inventory') {
            steps {
                writeFile file: 'ansible/inventory.ini', text: """
                    [postgresql_servers]
                    10.251.2.6 ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa
                """
            }
        }
        stage('Crear Variables') {
            steps {
                writeFile file: 'ansible/variables.yaml', text: """
                    postgres_db: ${DB_NAME}
                    postgres_user: ${DB_USER}
                    postgres_password: ${PGPASSWORD}
                """
            }
        }
        stage('Ejecutar Ansible Playbook') {
            steps {
                dir('ansible') {
                    sh '''
                        ansible-playbook -i inventory.ini install-postgresql.yaml
                    '''
                }
            }
        }
    }
}
