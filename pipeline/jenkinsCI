pipeline {
    agent {
        kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent
    volumeMounts:
    - name: docker-socket
      mountPath: /var/run/docker.sock
  - name: docker
    image: docker:20.10.21
    command:
    - cat
    tty: true
    volumeMounts:
    - name: docker-socket
      mountPath: /var/run/docker.sock
  volumes:
  - name: docker-socket
    hostPath:
      path: /var/run/docker.sock
      type: Socket
"""
        }
    }
    parameters {
        string(name: 'IMAGE_NAME', description: 'Nombre de la imagen Docker', defaultValue: 'prueba')
        string(name: 'VERSION', description: 'Versión de la imagen Docker', defaultValue: '1')
    }
    environment {
        IBM_CLOUD_API_KEY = credentials('IBM_CLOUD_API_KEY')
    }
    stages {
        stage('Descargar Código del Repositorio') {
            steps {
                checkout scm
            }
        }
        stage('Verificar Docker') {
            steps {
                sh 'docker --version'
            }
        }
        stage('Instalar IBM Cloud CLI') {
            steps {
                sh 'curl -fsSL https://clis.cloud.ibm.com/install/linux | sh'
            }
        }
        stage('Verificar IBM Cloud CLI') {
            steps {
                sh 'ibmcloud --version'
            }
        }
        stage('Instalar IBM Cloud Container Registry Plugin') {
            steps {
                sh 'ibmcloud plugin install container-registry'
            }
        }
        stage('Login to IBM Cloud') {
            steps {
                withCredentials([string(credentialsId: 'IBM_CLOUD_API_KEY', variable: 'API_KEY')]) {
                    sh 'ibmcloud login --apikey ${API_KEY} -r eu-gb'
                }
            }
        }
        stage('Target Resource Group') {
            steps {
                sh 'ibmcloud target -g Stemdo_Sandbox'
            }
        }
        stage('Configurar IBM Cloud Container Registry') {
            steps {
                sh '''
                ibmcloud cr login
                ibmcloud cr namespace-add ctenorio-cr
                '''
            }
        }
        stage('Construir y Publicar la Imagen Docker') {
            steps {
                sh """
                docker build -t uk.icr.io/ctenorio-cr/${params.IMAGE_NAME}:${params.VERSION} .
                docker push uk.icr.io/ctenorio-cr/${params.IMAGE_NAME}:${params.VERSION}
                """
            }
        }
    }
}
