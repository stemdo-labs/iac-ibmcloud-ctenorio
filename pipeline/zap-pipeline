pipeline {
    agent {
        kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'dind'
        }
    }
    parameters {
        string(name: 'TARGET_URL', defaultValue: 'https://route-develop-vsanchez.ez-ibm-openshift-vpc-b9be9ed6ae33d743815245d0b773ebc7-0000.eu-es.containers.appdomain.cloud/', description: 'URL a probar')
    }
    environment {
        REPORT_JSON = 'zap-report.json'
        REPORT_HTML = 'zap-report.html'
    }
    stages {
        stage('Instalar IBM Cloud CLI') {
            steps {
                sh 'curl -fsSL https://clis.cloud.ibm.com/install/linux | sh'
            }
        }
        stage('Instalar IBM Cloud Container Registry Plugin') {
            steps {
                sh 'ibmcloud plugin install container-registry'
            }
        }

        stage('Login to IBM Cloud') {
            steps {
                    sh 'ibmcloud login --apikey ${IBM_CLOUD_API_KEY} -r eu-gb'
            }
        }
        stage('Target Resource Group') {
            steps {
                sh 'ibmcloud target -g Stemdo_Sandbox'
            }
        }
        stage('Configurar IBM Cloud Container Registry') {
            steps {
                script {
                    sh '''
                    ibmcloud cr region-set global
                    ibmcloud cr login
                    '''
                }
            }
        }
        stage('Run OWASP ZAP') {
            steps {
                script {
                    echo "Ejecutando OWASP ZAP..."
                    sh """
                        docker run --rm \
                        -v ${WORKSPACE}:/zap/wrk:rw \
                        zaproxy/zap2docker-stable:latest zap-baseline.py \
                        -t "${params.TARGET_URL}" \
                        -J /zap/wrk/${REPORT_JSON} \
                        -r /zap/wrk/${REPORT_HTML}
                    """
                }
            }
        }
    }
    post {
        always {
            script {
                echo "Archivando reportes generados..."
                archiveArtifacts artifacts: "${REPORT_JSON}, ${REPORT_HTML}", fingerprint: true
            }
        }
        success {
            echo "OWASP ZAP Scan completado con éxito."
        }
        failure {
            echo "OWASP ZAP Scan detectó problemas."
        }
    }
}
