pipeline {
    agent any
    environment {
        ZAP_VERSION = '2.16.0' // Versión de ZAP
        ZAP_DOWNLOAD_URL = 'https://github.com/zaproxy/zaproxy/releases/download' // URL base de descarga
        TARGET_URL = 'http://example.com' // URL objetivo
        REPORT_NAME = 'zap_report.html' // Nombre del reporte
        ZAP_PORT = '8090'
    }
    stages {
        stage('Download OWASP ZAP Standalone') {
            steps {
                script {
                    // Descargar OWASP ZAP usando curl
                    sh """
                    echo "Descargando OWASP ZAP versión ${ZAP_VERSION}..."
                    curl -sL ${ZAP_DOWNLOAD_URL}/v${ZAP_VERSION}/ZAP_${ZAP_VERSION}_Linux.tar.gz -o zap.tar.gz
                    tar -xzf zap.tar.gz
                    rm zap.tar.gz
                    """
                }
            }
        }
        stage('Run OWASP ZAP') {
            steps {
                script {
                    // Ejecutar el análisis con OWASP ZAP
                    sh """
                    echo "Ejecutando OWASP ZAP Scan..."
                      ./ZAP_${ZAP_VERSION}/zap.sh -cmd -port ${ZAP_PORT} -quickurl ${TARGET_URL} -quickout  $(pwd)/${REPORT_NAME}
                    """
                }
            }
        }
    }
    post {
        always {
            echo "Generando reporte..."
            archiveArtifacts artifacts: "${REPORT_NAME}", allowEmptyArchive: true
        }
    }
}
