pipeline {
    agent any
    environment {
        ZAP_VERSION = '2.16.0' // Versión de OWASP ZAP que deseas instalar
        ZAP_DOWNLOAD_URL = 'https://github.com/zaproxy/zaproxy/releases/download'
        TARGET_URL = 'http://example.com' // URL objetivo a escanear
        REPORT_NAME = 'zap_report.html' // Nombre del reporte generado
    }
    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    // Instalar dependencias necesarias
                    sh """
                    echo "Instalando dependencias..."
                    sudo apt-get update
                    sudo apt-get install -y openjdk-11-jre wget unzip
                    """
                }
            }
        }
        stage('Download OWASP ZAP') {
            steps {
                script {
                    // Descargar e instalar OWASP ZAP
                    sh """
                    echo "Descargando OWASP ZAP versión ${ZAP_VERSION}..."
                    wget -q ${ZAP_DOWNLOAD_URL}/v${ZAP_VERSION}/ZAP_${ZAP_VERSION}_Core.zip -O zap.zip
                    unzip -o zap.zip -d zap
                    rm zap.zip
                    """
                }
            }
        }
        stage('Run OWASP ZAP Scan') {
            steps {
                script {
                    // Ejecutar el análisis rápido de ZAP
                    sh """
                    echo "Ejecutando OWASP ZAP Scan..."
                    zap/zap.sh -cmd -quickurl ${TARGET_URL} -quickout ${REPORT_NAME} -quickprogress
                    """
                }
            }
        }
    }
    post {
        always {
            echo "Generando reporte..."
            archiveArtifacts artifacts: "${REPORT_NAME}", allowEmptyArchive: true
        }
        failure {
            echo "El análisis de OWASP ZAP falló."
        }
    }
}
