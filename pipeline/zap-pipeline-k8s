pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: zap
    image: zaproxy/zap-stable
    command:
    - cat
    tty: true
    volumeMounts:
    - name: workspace-volume
      mountPath: /zap/wrk
  volumes:
  - name: workspace-volume
    emptyDir: {}
"""
        }
    }
    parameters {
        string(name: 'TARGET_URL', defaultValue: 'http://example.com', description: 'URL objetivo para el an√°lisis')
        string(name: 'REPORT_NAME_HTML', defaultValue: 'zap_report.html', description: 'Nombre del reporte en HTML')
        string(name: 'REPORT_NAME_XML', defaultValue: 'zap_report.xml', description: 'Nombre del reporte en XML')
        string(name: 'REPORT_NAME_JSON', defaultValue: 'zap_report.json', description: 'Nombre del reporte en JSON')
    }
    stages {
        stage('Run OWASP ZAP') {
            steps {
                container('zap') {
                    script {
                        // Crear el directorio para reportes
                        sh "mkdir -p /zap/wrk"

                        // Ejecutar OWASP ZAP y generar reportes en diferentes formatos
                        sh """
                        echo "Ejecutando OWASP ZAP en Kubernetes..."
                        zap.sh -cmd -quickurl ${params.TARGET_URL} -quickout /zap/wrk/${params.REPORT_NAME_HTML}
                        zap.sh -cmd -quickurl ${params.TARGET_URL} -quickout /zap/wrk/${params.REPORT_NAME_XML} -reportxml
                        zap.sh -cmd -quickurl ${params.TARGET_URL} -quickout /zap/wrk/${params.REPORT_NAME_JSON} -reportjson
                        """

                        // Copiar reportes al workspace
                        sh "cp /zap/wrk/* ${WORKSPACE}/"
                    }
                }
            }
        }
    }
    post {
        always {
            echo "Generando reportes..."
            // Archivar los reportes generados
            archiveArtifacts artifacts: "${params.REPORT_NAME_HTML}, ${params.REPORT_NAME_XML}, ${params.REPORT_NAME_JSON}", allowEmptyArchive: true
        }
    }
}
