pipeline {
        agent {
                kubernetes {
                   label 'jenkins-jenkins-agent'
                    defaultContainer 'dind'
                }
        }
    
    parameters {
        string(name: 'IMAGE_NAME', description: 'Nombre de la imagen Docker', defaultValue: '')
        string(name: 'VERSION', description: 'Versión de la imagen Docker', defaultValue: '')
        string(name: 'GIT_URL', description: 'Repositorio CD', defaultValue: '')
    }

    environment {
        IBM_CLOUD_API_KEY = credentials('IBM_CLOUD_API_KEY')
    }

    stages {

        stage('Descargar Código del Repositorio') {
            steps {
                checkout scm
            }
        }

        stage('Clonar repositorio ci') {
            steps {
                script {
                git branch: 'main', url: "${params.GIT_URL}", credentialsId: 'GIT_CREDENTIALS'
                }
            }
        }


        stage('Instalar IBM Cloud CLI') {
            steps {
                sh 'curl -fsSL https://clis.cloud.ibm.com/install/linux | sh'
                }
            }


        stage('Instalar IBM Cloud Container Registry Plugin') {
            steps {
                sh 'ibmcloud plugin install container-registry'
            }
        }
        
        stage('Instalar IBM Cloud Kubernetes Service Plugin') {
            steps {
                sh 'ibmcloud plugin install container-service -f'
            }
        }
        stage('Debug IBM Cloud Login Inputs') {
            steps {
                echo "API Key: ${env.IBM_CLOUD_API_KEY}" 
            }
        }

        stage('Login to IBM Cloud') {
             steps {
                withCredentials([string(credentialsId: 'IBM_CLOUD_API_KEY', variable: 'API_KEY')]) {
                    sh 'ibmcloud login --apikey ${API_KEY} -r eu-gb'
                }
            }
        }

        stage('Conectarse al cluster') {
             steps {
                 sh """
                        ibmcloud ks cluster config --cluster ez-ibm-openshift-vpc-w9ox --admin
                 """
           
                }
            }


        stage('Target Resource Group') {
            steps {
                sh 'ibmcloud target -g Stemdo_Sandbox'
            }
        }
        stage('Configurar IBM Cloud Container Registry') {
            steps {
                script {
                    sh '''
                     ibmcloud cr region-set global
                     ibmcloud cr login
                    '''
                }
            }
        }

        stage('Crear Namespace') {
            steps {
                script {
                    sh """
                    if ! kubectl get namespace ctenorio; then
                        kubectl create namespace ctenorio
                    fi
                    """
                }
            }
        }

     
        stage('Desplegar Imagen con Helm') {
            steps {
                script {
                    sh """
                    helm upgrade --install ${params.IMAGE_NAME} oci://icr.io/ctenorio-cr/frontend-chart \
                        --values ./frontend/values.yaml \
                        --set image.repository=icr.io/ctenorio-cr/${params.IMAGE_NAME} \
                        --set image.tag=${params.VERSION}
                        --namespace ctenorio 
                    """
                }
            }

        }

    }
        
}
